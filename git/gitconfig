# File:   gitconfig
# Author: Shoichi Aizawa <shoichiaizawa@gmail.com>
# Source: https://github.com/shoichiaizawa/dotfiles/tree/master/git/gitconfig

[include]
	path     = ~/.gitconfig.local
[user]
	name     = Shoichi Aizawa
	email    = shoichiaizawa@gmail.com
	username = shoichiaizawa
[github]
	user     = shoichiaizawa
[core]
	excludesfile = ~/.gitignore_global
	editor       = vim
	; editor       = vim -wl1  ; suggested -wl1 options, which did not work
	pager        = less -FRXK  ; --quit-if-one-screen, --RAW-CONTROL-CHARS, --no-init, --quit-on-intr
	quotepath = false
[commit]
	template = ~/.stCommitMsg
[difftool "sourcetree"]
	cmd  = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[merge]
	conflictstyle = diff3
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "media"]
	required = true
	clean    = git media clean %f
	smudge   = git media smudge %f
[filter "hawser"]
	clean    = git hawser clean %f
	smudge   = git hawser smudge %f
	required = true
[push]
	default = simple
[color]
	branch      = auto
	diff        = auto
	grep        = auto
	interactive = auto
	status      = auto
	ui          = auto
[alias]
	git  = !git
	init = init -g  ; `alias git=hub` in your profile
	this = !git init && git add . && git commit -m \"Initial commit\"

	# See alternative solution 'karan/joe', 'simonwhitaker/gibo'
	ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"

	# Adopted from @mathiasbynens
	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	# ---
	# add
	# ---

	aa          = add --all
	addall      = add --all

	interactive = add --patch

	# ------
	# branch
	# ------

	branch   = branch --verbose
	br       = branch --verbose

	branches = branch --all --verbose

	deletetracking = branch -d -r

	# Adopted from @mathiasbynens
	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# ----------------
	# browse (git=hub)
	# ----------------

	b               = browse
	repo            = browse
	gh              = browse

	gh-branches     = browse -- branches
	gh-commits      = browse -- commits
	gh-contributors = browse -- contributors
	gh-graphs       = browse -- graphs
	gh-issues       = browse -- issues
	gh-network      = browse -- network
	gh-pulls        = browse -- pulls
	gh-stargazers   = browse -- stargazers
	gh-tree         = browse -- tree
	gh-wiki         = browse -- wiki

	# --------
	# checkout
	# --------

	co = checkout
	cb = checkout -b

	# -----------
	# cherry-pick
	# -----------

	cp = cherry-pick

	# ------
	# commit
	# ------

	commit = commit --verbose
	ci     = commit --verbose

	cm     = commit -m
	cam    = commit -am

	amend  = commit --verbose --amend

	# Adopted from @mathiasbynens
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# ------
	# config
	# ------

	conf-ls  = config --global --list
	confl-ls = config --local  --list

	conf-e   = config --global --edit
	confl-e  = config --local  --edit

	# ----
	# diff
	# ----

	# Adapted from @mathiasbynens
	# Show the diff between the latest commit and the current state
	d   = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di  = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	df  = diff
	ds  = diff --staged
	dc  = diff --color-words
	dsc = diff --staged --color-words

	# ----
	# help
	# ----

	commands = help --all
	guides   = help --guides

	# ---
	# log
	# ---

	log5  = log -5
	log10 = log -10
	log20 = log -20

	l     = log --graph --decorate --oneline --all
	l5    = log --graph --decorate --oneline --all -5
	l10   = log --graph --decorate --oneline --all -10
	l20   = log --graph --decorate --oneline --all -20

	# Adopted from @tpope
	# List the commits for this week in reverse order
	summary = log --oneline --author="Shoichi.Aizawa" --since=last.mon --reverse

	# -----
	# merge
	# -----

	# TODO: Adapted from @mathiasbynens; find out how to use this
	# Merge GitHub pull request on top of the `master` branch
	mpr = "!f() { \
		if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
			git fetch origin refs/pull/$1/head:pr/$1 && \
			git rebase master pr/$1 && \
			git checkout master && \
			git merge pr/$1 && \
			git branch -D pr/$1 && \
			git commit --amend -m \"$(git log -1 --pretty=%B)\n\nCloses #$1.\"; \
		fi \
	}; f"

	# ------
	# rebase
	# ------

	edit = rebase --interactive

	# ------
	# remote
	# ------

	remotes = remote --verbose

	# -----
	# reset
	# -----

	discard    = checkout --
	discardall = reset --hard

	uncommit   = reset HEAD^

	unstage    = reset HEAD

	# -----
	# stash
	# -----

	stashes = stash list

	# ------
	# status
	# ------

	st      = status

	s       = status --short --branch

	stv     = status -v
	stvv    = status -vv

	ignored = status --ignored

	# ---
	# tag
	# ---

	tags = tag -l

[filter "lfs"]
	clean    = git-lfs clean -- %f
	smudge   = git-lfs smudge -- %f
	required = true
	process  = git-lfs filter-process
[pager]
	log  = diff-highlight | less -FRXK
	show = diff-highlight | less -FRXK
	diff = diff-highlight | less -FRXK
[diff]
	compactionHeuristic = true
[interactive]
	diffFilter = (diff-highlight 2> /dev/null || cat) | less -FRXK
[help]
	autocorrect = 1
